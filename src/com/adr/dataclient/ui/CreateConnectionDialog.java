//    Data Client is a simple script tasks executor.
//    Copyright (C) 2011 Adri√°n Romero Corchado.
//
//    This file is part of Task Executor
//
//    Data Client is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Data Client is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Data Client. If not, see <http://www.gnu.org/licenses/>.

package com.adr.dataclient.ui;

import com.adr.dataclient.Utils;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.Rectangle;
import java.io.IOException;
import java.util.ResourceBundle;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author adrian
 */
public class CreateConnectionDialog extends javax.swing.JDialog {

    private static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/adr/dataclient/ui/i18n/messages"); // NOI18N
    private static final Logger logger = Logger.getLogger(CreateConnectionDialog.class.getName());

    private RSyntaxTextArea textArea;
    private RTextScrollPane sp;

    private boolean ok;

    /** Creates new form ServerPropertiesDialog */
    public CreateConnectionDialog(java.awt.Window parent) throws IOException {
        super(parent, ModalityType.APPLICATION_MODAL);
        init("new_connection", true, Utils.loadResourceText("/com/adr/dataclient/ui/default.xml"));
    }

    /** Creates new form ServerPropertiesDialog */
    public CreateConnectionDialog(java.awt.Window parent, ClientConfig clientconfig) {
        super(parent, ModalityType.APPLICATION_MODAL);

        init(
                clientconfig.getName(),
                false,
                clientconfig.getConfigurationProperties());
    }

    private void init(String name, boolean nameenabled, String configproperties) {

        initComponents();

        textArea = new RSyntaxTextArea();

        // desktophints = (Map) Toolkit.getDefaultToolkit().getDesktopProperty("awt.font.desktophints");
        // desktophints.get(RenderingHints.KEY_TEXT_ANTIALIASING);
        // textArea.setTextAntiAliasHint("VALUE_TEXT_ANTIALIAS_ON");
        textArea.setTextAntiAliasHint("VALUE_TEXT_ANTIALIAS_LCD_HRGB");
        // textArea.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 12));
        textArea.setFont(new Font(Font.MONOSPACED, textAreaHidden.getFont().getStyle(), textAreaHidden.getFont().getSize()));

        textArea.setSyntaxEditingStyle("text/xml");
        textArea.setText("");
        textArea.setCaretPosition(0);

        sp = new RTextScrollPane(textArea);
        sp.getGutter().setLineNumberFont(new Font(Font.MONOSPACED, textAreaHidden.getFont().getStyle(), textAreaHidden.getFont().getSize()));

        jPanelText.add(sp, BorderLayout.CENTER);


        jName.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                jOK.setEnabled(jName.getText().length() > 0);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                jOK.setEnabled(jName.getText().length() > 0);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                jOK.setEnabled(jName.getText().length() > 0);
            }
        });

        jName.setText(name);
        jName.setEnabled(nameenabled);
        textArea.setText(configproperties);

        pack();
        Rectangle screenSize = this.getParent().getBounds();
        setLocation(screenSize.x + (screenSize.width - getWidth()) / 2, screenSize.y + (screenSize.height - getHeight()) / 2);

        getRootPane().setDefaultButton(jOK);

        ok = false;
    }

    public boolean getOK() {
        return ok;
    }

    public ClientConfig getClientConfig() {
        return new ClientConfig(jName.getText(), textArea.getText());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textAreaHidden = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jOK = new javax.swing.JButton();
        jCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanelText = new javax.swing.JPanel();

        textAreaHidden.setColumns(20);
        textAreaHidden.setRows(5);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/adr/dataclient/ui/i18n/messages"); // NOI18N
        setTitle(bundle.getString("title.dataclient")); // NOI18N
        setResizable(false);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jOK.setText(bundle.getString("label.ok")); // NOI18N
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });
        jPanel1.add(jOK);

        jCancel.setText(bundle.getString("button.cancel")); // NOI18N
        jCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jLabel1.setText(bundle.getString("label.name")); // NOI18N

        jLabel2.setText(bundle.getString("label.properties")); // NOI18N

        jPanelText.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jName, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelText, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jPanelText, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed

        ok = true;
        dispose();
        
    }//GEN-LAST:event_jOKActionPerformed

    private void jCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelActionPerformed

        dispose();

    }//GEN-LAST:event_jCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jName;
    private javax.swing.JButton jOK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelText;
    private javax.swing.JTextArea textAreaHidden;
    // End of variables declaration//GEN-END:variables

}
