//    Data Client is a simple script tasks executor.
//    Copyright (C) 2011 Adri√°n Romero Corchado.
//
//    This file is part of Task Executor
//
//    Data Client is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Data Client is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Data Client. If not, see <http://www.gnu.org/licenses/>.

package com.adr.dataclient.ui;

import java.awt.Image;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author adrian
 */
public class ClientFrame extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(ClientFrame.class.getName());
    private static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/adr/dataclient/ui/i18n/messages"); // NOI18N


    /** Creates new form Launcher */
    public ClientFrame() {

        initComponents();

        try {
            List<Image> images = new ArrayList<Image>();
            images.add(ImageIO.read(ClientFrame.class.getResourceAsStream("/com/adr/dataclient/ui/images/16x16/icons.png")));
            setIconImages(images);
        } catch (IOException e) {
        }
    }

    public void start() {

        // pack();
        setLocationRelativeTo(null);

        setVisible(true);

        connect();
    }

    private boolean closeDocument() {
        return closeDocument((ClientPanel) jtabbed.getSelectedComponent());
    }

    public boolean closeDocument(ClientPanel panel) {

        if (panel == null) {
            return true;
        } else {

            if (!panel.askClose()) {
                return false;
            }

            jtabbed.remove(panel);
            if (jtabbed.getTabCount() == 0) {
                jMenuClose.setEnabled(false);
            }
            return true;
        }
    }

    private void closeForm() {

        // Save documents
        while (jtabbed.getTabCount() > 0 ) {
            if (!closeDocument((ClientPanel) jtabbed.getComponentAt(jtabbed.getTabCount() - 1))) {
                return;
            }
        }

        dispose();
    }

    private void connect() {
        HBaseConnectDialog connectdialog = new HBaseConnectDialog(this);
        connectdialog.setVisible(true);
        if (connectdialog.getOK()) {
            ClientConfig config = connectdialog.getHBaseConnection();
            try {
                addPanelToTab(new ClientAdmin(this, config));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, new MessageComponent(MessageFormat.format(bundle.getString("message.connectfail"), config.getName()), ex), bundle.getString("title.hbaseconnect"), JOptionPane.WARNING_MESSAGE);
                logger.log(Level.SEVERE, null, ex);
            }
        }
    }

    public void addPanelToTab(ClientPanel panel) {

        jtabbed.addTab(panel.getTabTitle(), panel);
        jtabbed.setTabComponentAt(jtabbed.getTabCount() - 1, new TitleTab(this, panel));
        jtabbed.setSelectedComponent(panel);
        jMenuClose.setEnabled(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtabbed = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuClose = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/adr/dataclient/ui/i18n/messages"); // NOI18N
        setTitle(bundle.getString("title.dataclient")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jtabbed.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        getContentPane().add(jtabbed, java.awt.BorderLayout.CENTER);

        jMenu1.setText(bundle.getString("menu.file")); // NOI18N

        jMenuItem1.setText(bundle.getString("label.connect")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator2);

        jMenuClose.setText(bundle.getString("menu.close")); // NOI18N
        jMenuClose.setEnabled(false);
        jMenuClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCloseActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuClose);

        jMenuItem3.setText(bundle.getString("menu.exit")); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(bundle.getString("menu.help")); // NOI18N

        jMenuItem2.setText(bundle.getString("menu.about")); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-723)/2, (screenSize.height-740)/2, 723, 740);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        closeForm();

    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        System.exit(0);

    }//GEN-LAST:event_formWindowClosed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        closeForm();

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCloseActionPerformed

        closeDocument();
        
    }//GEN-LAST:event_jMenuCloseActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        About about = new About(this);
        about.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        connect();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuClose;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jtabbed;
    // End of variables declaration//GEN-END:variables

}
