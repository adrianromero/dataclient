//    Data Client is a simple script tasks executor.
//    Copyright (C) 2011 Adri√°n Romero Corchado.
//
//    This file is part of Task Executor
//
//    Data Client is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Data Client is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Data Client. If not, see <http://www.gnu.org/licenses/>.

package com.adr.dataclient.ui;

import java.awt.Rectangle;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ResourceBundle;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.apache.hadoop.hbase.client.HBaseAdmin;

/**
 *
 * @author adrian
 */
public class HBaseConnectDialog extends javax.swing.JDialog {

    private static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/adr/dataclient/ui/i18n/messages"); // NOI18N

    private DefaultListModel connectionsmodel;

    private boolean ok;

    /** Creates new form ServerPropertiesDialog */
    public HBaseConnectDialog(java.awt.Window parent) {
        super(parent, ModalityType.APPLICATION_MODAL);
        initComponents();

        init(parent);
    }

    private void init(java.awt.Window parent) {

        connectionsmodel = new DefaultListModel();

        ClientConfig[] hbaseconns = UIConfiguration.getInstance().getConnections();

        for (ClientConfig conn : hbaseconns) {
            connectionsmodel.addElement(conn);
        }

        jList1.setCellRenderer(new ConnectionRenderer());
        jList1.setModel(connectionsmodel);

        if (connectionsmodel.getSize() > 0) {
            jList1.setSelectedIndex(0);
        }

        pack();
        Rectangle screenSize = parent.getBounds();
        setLocation(screenSize.x + (screenSize.width - getWidth()) / 2, screenSize.y + (screenSize.height - getHeight())/2);

        getRootPane().setDefaultButton(jOK);

        ok = false;
    }

    public boolean getOK() {
        return ok;
    }

    public ClientConfig getHBaseConnection() {
        return (ClientConfig) jList1.getSelectedValue();
    }

    private void removeSelectedElement(JList list, DefaultListModel model) {

        int index = list.getSelectedIndex();
        model.remove(index);
        if (index < model.size()) {
            list.setSelectedIndex(index);
            list.ensureIndexIsVisible(index);
        } else if (index > 0) {
            list.setSelectedIndex(index - 1);
            list.ensureIndexIsVisible(index - 1);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jOK = new javax.swing.JButton();
        jCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/adr/dataclient/ui/i18n/messages"); // NOI18N
        setTitle(bundle.getString("title.hbaseconnect")); // NOI18N
        setResizable(false);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton1.setText(bundle.getString("button.check")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jPanel1.add(jSeparator1);

        jOK.setText(bundle.getString("label.ok")); // NOI18N
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });
        jPanel1.add(jOK);

        jCancel.setText(bundle.getString("button.cancel")); // NOI18N
        jCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/adr/dataclient/ui/images/22x22/db_add.png"))); // NOI18N
        jButtonAdd.setFocusable(false);
        jButtonAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonAdd);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/adr/dataclient/ui/images/22x22/db_remove.png"))); // NOI18N
        jButtonDelete.setFocusable(false);
        jButtonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonDelete);

        jButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/adr/dataclient/ui/images/22x22/db_edit.png"))); // NOI18N
        jButtonEdit.setFocusable(false);
        jButtonEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonEdit);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed

        ok = true;
        dispose();
        
    }//GEN-LAST:event_jOKActionPerformed

    private void jCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelActionPerformed

        dispose();

    }//GEN-LAST:event_jCancelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ClientConfig config = getHBaseConnection();
        try {
            HBaseAdmin.checkHBaseAvailable(config.getConfiguration());
            JOptionPane.showMessageDialog(this, MessageFormat.format(bundle.getString("message.connectsuccesful"), config.getName()), bundle.getString("title.hbaseconnect"), JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, new MessageComponent(MessageFormat.format(bundle.getString("message.connectfail"), config.getName()), ex), bundle.getString("title.hbaseconnect"), JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged

        if (!evt.getValueIsAdjusting()) {
            ClientConfig config = getHBaseConnection();
            if (config == null)  {
                jOK.setEnabled(false);
                jButton1.setEnabled(false);
                jButtonAdd.setEnabled(true);
                jButtonDelete.setEnabled(false);
                jButtonEdit.setEnabled(false);
            } else {
                jOK.setEnabled(true);
                jButton1.setEnabled(true);
                jButtonAdd.setEnabled(true);
                jButtonDelete.setEnabled(!"default".equals(config.getName()));
                jButtonEdit.setEnabled(true);
            }
        }

    }//GEN-LAST:event_jList1ValueChanged

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed

        try {
            CreateConnectionDialog createconnection = new CreateConnectionDialog(SwingUtilities.getWindowAncestor(this));
            createconnection.setVisible(true);
            if (createconnection.getOK()) {
                ClientConfig clientconfig = createconnection.getClientConfig();
                // exists
                for (Object obj : connectionsmodel.toArray()) {
                    ClientConfig config = (ClientConfig) obj;
                    if (config.getName().equals(clientconfig.getName())) {
                        JOptionPane.showMessageDialog(this, new MessageComponent(bundle.getString("message.createconnectionfail"), bundle.getString("message.connectionduplicated")), bundle.getString("title.hbaseconnect"), JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                UIConfiguration.getInstance().saveConnection(clientconfig);
                connectionsmodel.addElement(clientconfig);
                jList1.setSelectedValue(clientconfig, true);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, new MessageComponent(bundle.getString("message.createconnectionfail"), ex), bundle.getString("title.hbaseconnect"), JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed

        ClientConfig config = getHBaseConnection();

        if (JOptionPane.showConfirmDialog(this,
                MessageFormat.format(bundle.getString("message.askdeleteconnection"), config.getName()),
                bundle.getString("title.hbaseconnect"), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            
            UIConfiguration.getInstance().deleteConnection(config.getName());
            removeSelectedElement(jList1, connectionsmodel);
        }

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed

        ClientConfig config = getHBaseConnection();

        CreateConnectionDialog createconnection = new CreateConnectionDialog(SwingUtilities.getWindowAncestor(this), config);
        createconnection.setVisible(true);

        if (createconnection.getOK()) {

            ClientConfig clientconfig = createconnection.getClientConfig();

            UIConfiguration.getInstance().saveConnection(clientconfig);
            connectionsmodel.set(jList1.getSelectedIndex(), clientconfig);
        }

    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked

        if (evt.getClickCount() == 2) {
            ok = true;
            dispose();
        }
        
    }//GEN-LAST:event_jList1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jCancel;
    private javax.swing.JList jList1;
    private javax.swing.JButton jOK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

}
